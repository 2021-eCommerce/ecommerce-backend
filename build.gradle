buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'

    //querydsl 추가
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'

    id 'java'
}

group = 'com.ecommerce'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.4.2.Final"
    lombokVersion = "1.18.16"
    lombokMapstructBindingVersion = "0.2.0"
}

dependencies {
    /* jpa */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    /* web */
    implementation 'org.springframework.boot:spring-boot-starter-web'

    /* junit */
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    /* swagger */
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    /* devtools */
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    /* MySQL */
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    runtimeOnly 'mysql:mysql-connector-java'

    /* MariaDB */
//	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    /* lombok */
    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    /* url mapping */
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    /* security */
    implementation 'org.springframework.boot:spring-boot-starter-security'

    /* security - session */
    implementation 'org.springframework.session:spring-session:1.3.2.RELEASE'

    /* security - jwt */
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    /* security - redis */
//	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    /* test */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    /* DTO */
    implementation 'javax.validation:validation-api'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}"

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}", "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation "com.querydsl:querydsl-core:${queryDslVersion}"

    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'
}

test {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝